{
  "version": 3,
  "file": "smstUtilityModule.umd.min.js",
  "sources": [
    "ng://smstUtilityModule/out/src/app/modules/smst-utility-module/classes/event.lock.ts",
    "ng://smstUtilityModule/out/src/app/modules/smst-utility-module/directive/zoom.directive.ts",
    "ng://smstUtilityModule/out/src/app/modules/smst-utility-module/SmStUtilityModule.ts"
  ],
  "sourcesContent": [
    "export class EventLock {\n  public event: SmStEvent;\n  private locked: boolean;\n\n  constructor() {\n    this.event = SmStEvent.NOEVENT;\n    this.locked = false;\n  }\n  init(name: SmStEvent) {\n    this.event = name;\n    this.locked = true;\n  }\n\n  public unlock() {\n    this.event = SmStEvent.NOEVENT;\n    this.locked = false;\n  }\n\n  public isLocked(event: SmStEvent) {\n    if (this.event === SmStEvent.NOEVENT) {\n      this.event = event;\n    }\n    return this.locked && this.event !== event;\n  }\n}\n\nexport enum SmStEvent {\n  NOEVENT, PINCH, PAN, WHEEL, TAP, EXTERNAL\n}\n",
    "import {Directive, ElementRef, HostListener, Input, Output, OnChanges, OnInit, Renderer2, EventEmitter} from '@angular/core';\nimport {EventLock, SmStEvent} from '../classes/event.lock';\n\n/**\n * SmStZoomDirective\n *\n * In order for this directive to work, the template structure should be as follows:\n * <div id='container'>\n *     <div id='targetId'> ==> content container wrapper\n *      <div> </div> ==> actual content container\n *      </div>\n * </div>\n *\n *@Input\n * minZoom : minimum allowed zoom.\n *          default: 1\n *\n * maxZoom : maximum allowed zoom.\n *          default: 2\n *\n * zoomTargetId: id of the content container wrapper.\n *\n * currentZoom: value of the current zoom of the container. Can be used to set the inital value.\n *\n * enableTabZoom: boolean defines whether zoom on click/tab is enabled\n *\n * @Output\n *\n * currentZoomChange: (2 way bound): emits the zoom value when changed by directive.\n */\n@Directive({\n  selector: '[smstZoom]'\n})\nexport class SmStZoomDirective implements OnInit, OnChanges {\n\n  private zoomStep: number;\n  private pinchStep: number;\n  private zoomTarget: any;\n  private zoomPoint: Point; // Position of the mouse on the start of the wheel/pinch event.\n  private previousZoom: number;\n\n  private zoomPointLocked: boolean;\n  private zoomPointLockTimeout: any;\n  private eventLockResetTimout: any;\n  private currentDeviation: Point;\n\n  private eventLock: EventLock;\n\n  @Input('minZoom') minZoom: number;\n  @Input('maxZoom') maxZoom: number;\n  @Input('zoomTargetId') zoomTargetId: string;\n  @Input('currentZoom') currentZoom: number;\n  @Input('enableTabZoom') enableTabZoom: boolean;\n  @Input('disableZoom') disableZoom: boolean;\n\n  @Output('currentZoomChange') currentZoomChange: EventEmitter<number>;\n\n  @HostListener('wheel', ['$event']) onWheel(event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if( this.eventLock.isLocked(SmStEvent.WHEEL)){\n      return;\n    }\n    if (event.ctrlKey) {\n      event.preventDefault();\n      this.eventLock.init(SmStEvent.WHEEL);\n      this.zoomPoint = {x: event.x, y: event.y} ;\n      this.zoomIntoContainer((event.deltaY < 0 ) ? this.zoomPoint :\n        this.getTargetCenter(), (event.deltaY < 0 ) ? this.zoomStep : -this.zoomStep);\n      this.resetEventLockTimout();\n    }\n  }\n  @HostListener('tap', ['$event']) onTouch(event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if( this.eventLock.isLocked(SmStEvent.TAP)) {\n      return;\n    }\n    if(this.enableTabZoom) {\n      event.preventDefault();\n      this.eventLock.init(SmStEvent.TAP);\n      this.zoomPoint = {x: event.center.x, y: event.center.y};\n      this.zoomIntoContainer(this.zoomPoint, -this.zoomStep);\n      this.resetEventLockTimout();\n    }\n  }\n  @HostListener('pinchin', ['$event']) onPinchIn(event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if (event.velocityY === 0 || this.eventLock.isLocked(SmStEvent.PINCH)) { return; }\n    this.zoomPoint = {x: event.center.x, y: event.center.y};\n    this.zoomIntoContainer(this.zoomPoint, -this.pinchStep);\n  }\n  @HostListener('pinchout', ['$event']) onPinchOut(event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if (event.velocityY === 0 || this.eventLock.isLocked(SmStEvent.PINCH)) { return; }\n    this.zoomPoint = {x: event.center.x, y: event.center.y};\n    this.zoomIntoContainer(this.getTargetCenter(), this.pinchStep);\n  }\n  @HostListener('touchstart', ['$event']) onTouchStart(event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if (event.touches.length > 1) {\n      // if more then one touch, clear the EventLock for other events.\n      if (!this.eventLock.isLocked(SmStEvent.PAN)) {\n        this.eventLock.unlock();\n        this.eventLock.init(SmStEvent.PINCH);\n      }\n      return;\n    }\n    if (!this.eventLock.isLocked(SmStEvent.PAN)) {\n      this.eventLock.init(SmStEvent.PAN);\n      this.zoomPoint = {x: event.touches[0].clientX, y: event.touches[0].clientY}; // reuse zoomPoint as reference point\n    }\n  }\n  @HostListener('touchmove', ['$event']) onTouchMove (event: any) {\n    if (this.disableZoom) {\n      return;\n    }\n    if (this.zoomPoint.x < 0) { return; } // zoomPoint becomes zero on touchEnd, this means no further actions needed.\n    if (!this.eventLock.isLocked(SmStEvent.PAN)) {\n      const newPoint = {x: event.touches[0].clientX, y: event.touches[0].clientY};\n      this.scroll('x', this.zoomPoint.x - newPoint.x);\n      this.scroll('y', this.zoomPoint.y - newPoint.y);\n      this.zoomPoint = newPoint;\n    }\n\n  }\n  @HostListener('touchend', ['$event']) onTouchEnd(event: any) {\n    this.eventLock.unlock();\n    this.zoomPoint = {x: -1, y: -1};\n  }\n\n  constructor(private render: Renderer2, private elRef: ElementRef) {\n    this.zoomStep = 0.1;\n    this.pinchStep = 0.03;\n    if (!this.currentZoom) {\n      this.currentZoom = 1;\n    }\n    this.previousZoom = 0;\n    this.minZoom = 1;\n    this.maxZoom = 2;\n    this.zoomTargetId = 'zoomTarget';\n    this.eventLock = new EventLock();\n    this.currentZoomChange = new EventEmitter()\n    this.enableTabZoom = false;\n    this.disableZoom = false;\n  }\n  private zoomIntoContainer(zoomPoint: Point, zoomStep: number , external?: boolean){\n    if ( ! this.zoomTarget.firstElementChild ) return;\n    let percentageXBefore = (this.elRef.nativeElement.scrollLeft + (this.getScrollHandleSize('x')/2)) / this.elRef.nativeElement.scrollWidth;\n    let previousHandleSizeX = this.getScrollHandleSize('x');\n    let percentageYBefore = (this.elRef.nativeElement.scrollTop + (this.getScrollHandleSize('y')/2)) / this.elRef.nativeElement.scrollHeight;\n    let previousHandleSizeY = this.getScrollHandleSize('y');\n\n    if (!this.setNewZoomLevel(zoomStep, (external) ? external : false)) { return; }\n    // scale the actual content\n    this.render.setStyle(this.zoomTarget.firstElementChild, 'transform-origin', '0 0');\n    this.render.setStyle(this.zoomTarget.firstElementChild, 'transform', 'scale(' + this.currentZoom + ')');\n\n    // this ratio can be used to convert the scroll left to actual pixels.\n    const containerScrollRatioX = this.elRef.nativeElement.clientWidth / this.zoomTarget.firstElementChild.getBoundingClientRect().width;\n    const containerScrollRatioY = this.elRef.nativeElement.clientHeight / this.zoomTarget.firstElementChild.getBoundingClientRect().height;\n\n    //PERFECT CENTER  => (this.elRef.nativeElement.scrollWidth/2) - ((this.getScrollHandleSize('x')/2) * (1/containerScrollRatio))\n    let scrollLeft = 0;\n    let scrollTop = 0;\n    if(zoomStep > 0) {\n      scrollLeft = (this.elRef.nativeElement.scrollWidth * percentageXBefore) -\n        (this.getScrollHandleSize('x') / 2) +\n        ((previousHandleSizeX - this.getScrollHandleSize('x')) * 2);\n\n      scrollTop = (this.elRef.nativeElement.scrollHeight * percentageYBefore) -\n        (this.getScrollHandleSize('y') / 2) +\n        ((previousHandleSizeY - this.getScrollHandleSize('y')) * 2);\n\n    } else {\n      scrollLeft = (this.elRef.nativeElement.scrollWidth * percentageXBefore) -\n        (this.getScrollHandleSize('x') / 2) +\n        ((previousHandleSizeX - this.getScrollHandleSize('x')) * 2);\n\n      scrollTop = (this.elRef.nativeElement.scrollHeight * percentageYBefore) -\n        (this.getScrollHandleSize('y') / 2) +\n        ((previousHandleSizeY - this.getScrollHandleSize('y')) * 2);\n\n    }\n    let centerDeviation = this.getCenterDeviation(this.getTargetCenter(), zoomPoint, zoomStep);\n    this.elRef.nativeElement.scrollLeft = scrollLeft + centerDeviation.x;\n    this.elRef.nativeElement.scrollTop = scrollTop + centerDeviation.y;\n    this.currentZoomChange.emit(this.currentZoom);\n  }\n  private getScrollHandleSize(direction: string) {\n    if(direction === 'x') {\n      return ((this.elRef.nativeElement.getBoundingClientRect().width /\n      this.zoomTarget.firstElementChild.getBoundingClientRect().width) *\n      (this.elRef.nativeElement.clientWidth));\n    } else {\n      return ((this.elRef.nativeElement.getBoundingClientRect().height /\n      this.zoomTarget.firstElementChild.getBoundingClientRect().height) *\n      (this.elRef.nativeElement.clientHeight ));\n    }\n  }\n  private setNewZoomLevel(zoomStep: number, external: boolean): boolean {\n    this.currentZoom = (external) ? this.currentZoom : this.currentZoom += zoomStep;\n    if (this.currentZoom < this.minZoom) {\n      this.currentZoom = this.minZoom;\n      if (this.previousZoom === this.currentZoom) { return false; }\n    }else if (this.currentZoom > this.maxZoom) {\n      this.currentZoom = this.maxZoom;\n      if (this.previousZoom === this.currentZoom) { return false; }\n\n    }\n    this.previousZoom = this.currentZoom;\n    return true;\n  }\n  private getTargetCenter(): Point {\n    const rectangle = this.elRef.nativeElement.getBoundingClientRect();\n    return {x: rectangle.left + (rectangle.width / 2) , y: rectangle.top + (rectangle.height / 2) };\n  }\n  private getCenterDeviation(center: Point, zoomPoint: Point, zoomStep: number): Point {\n    if (this.eventLock.isLocked(SmStEvent.WHEEL)) {\n      return {x: 0, y: 0};\n    }\n    if (this.zoomPointLockTimeout) {\n      clearTimeout(this.zoomPointLockTimeout);\n    }\n    this.zoomPointLockTimeout = setTimeout(() => {\n      this.zoomPointLocked = false;\n    }, 500);\n    if (!this.zoomPointLocked) {\n      this.zoomPointLocked = true;\n      let stepsToMaxZoom = (this.maxZoom - this.currentZoom) / zoomStep;\n      stepsToMaxZoom = (stepsToMaxZoom === 0) ? 1 : stepsToMaxZoom;\n      this.currentDeviation = {\n        x: (zoomPoint.x - center.x) / stepsToMaxZoom ,\n        y: (zoomPoint.y - center.y) / stepsToMaxZoom\n      };\n    }\n    return this.currentDeviation;\n\n  }\n  private scroll(direction: string, value: number) {\n    switch (direction) {\n      case 'y':\n        this.elRef.nativeElement.scrollTop += value;\n        break;\n      case 'x':\n        this.elRef.nativeElement.scrollLeft += value;\n        break;\n    }\n  }\n  private defineZoomTarget() {\n    this.zoomTarget = document.getElementById(this.zoomTargetId);\n    if (!this.zoomTarget) {\n      console.error('SmStUtilityModule - ZoomDirective: ', 'zoomTarget could not be initiated. ', 'zoomTargetId = ', this.zoomTargetId);\n    }\n  }\n  private resetEventLockTimout(){\n    if (this.eventLockResetTimout) {\n      clearTimeout(this.eventLockResetTimout);\n    }\n    this.eventLockResetTimout = setTimeout(() => {\n      this.eventLock.unlock();\n    },500)\n  }\n  ngOnInit() {\n    this.zoomTarget = document.getElementById(this.zoomTargetId);\n  }\n  ngOnChanges(changes: any) {\n    if (changes.zoomTargetId ) {\n      this.defineZoomTarget();\n    }\n    if (changes.currentZoom) {\n      if (!this.zoomTarget) {\n        this.defineZoomTarget();\n      }\n      if(!this.eventLock.isLocked(SmStEvent.EXTERNAL)){\n        this.eventLock.init(SmStEvent.EXTERNAL);\n        this.zoomIntoContainer(this.getTargetCenter(),\n          changes.currentZoom.currentValue - (changes.currentZoom.previousValue || 1), true);\n        this.resetEventLockTimout();\n      }\n    }\n    if (changes.disableZoom){\n      this.eventLock.unlock();\n    }\n  }\n}\nexport class Point {\n  x: number;\n  y: number;\n}\n",
    "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport {SmStZoomDirective} from './directive/zoom.directive';\n\n@NgModule({\n  declarations: [\n    SmStZoomDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [],\n  exports: [ SmStZoomDirective ]\n})\nexport class SmStUtilityModule { }\n"
  ],
  "names": [
    "EventLock",
    "this",
    "event",
    "SmStEvent",
    "NOEVENT",
    "locked",
    "prototype",
    "init",
    "name",
    "unlock",
    "isLocked",
    "SmStZoomDirective",
    "render",
    "elRef",
    "zoomStep",
    "pinchStep",
    "currentZoom",
    "previousZoom",
    "minZoom",
    "maxZoom",
    "zoomTargetId",
    "eventLock",
    "currentZoomChange",
    "EventEmitter",
    "enableTabZoom",
    "disableZoom",
    "onWheel",
    "WHEEL",
    "ctrlKey",
    "preventDefault",
    "zoomPoint",
    "x",
    "y",
    "zoomIntoContainer",
    "deltaY",
    "getTargetCenter",
    "resetEventLockTimout",
    "onTouch",
    "TAP",
    "center",
    "onPinchIn",
    "velocityY",
    "PINCH",
    "onPinchOut",
    "onTouchStart",
    "touches",
    "length",
    "PAN",
    "clientX",
    "clientY",
    "onTouchMove",
    "newPoint",
    "scroll",
    "onTouchEnd",
    "external",
    "zoomTarget",
    "firstElementChild",
    "percentageXBefore",
    "nativeElement",
    "scrollLeft",
    "getScrollHandleSize",
    "scrollWidth",
    "previousHandleSizeX",
    "percentageYBefore",
    "scrollTop",
    "scrollHeight",
    "previousHandleSizeY",
    "setNewZoomLevel",
    "setStyle",
    "clientWidth",
    "getBoundingClientRect",
    "width",
    "clientHeight",
    "height",
    "centerDeviation",
    "getCenterDeviation",
    "emit",
    "direction",
    "rectangle",
    "left",
    "top",
    "_this",
    "zoomPointLockTimeout",
    "clearTimeout",
    "setTimeout",
    "zoomPointLocked",
    "stepsToMaxZoom",
    "currentDeviation",
    "value",
    "defineZoomTarget",
    "document",
    "getElementById",
    "console",
    "error",
    "eventLockResetTimout",
    "ngOnInit",
    "ngOnChanges",
    "changes",
    "EXTERNAL",
    "currentValue",
    "previousValue",
    "type",
    "Directive",
    "args",
    "selector",
    "Renderer2",
    "ElementRef",
    "Input",
    "Output",
    "HostListener",
    "SmStUtilityModule",
    "NgModule",
    "declarations",
    "imports",
    "BrowserModule",
    "FormsModule",
    "providers",
    "bootstrap",
    "exports"
  ],
  "mappings": "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"
}
